
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$StreamingApp-primary: mat.define-palette(mat.$indigo-palette);
$StreamingApp-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$StreamingApp-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$StreamingApp-theme: mat.define-light-theme((
  color: (
    primary: $StreamingApp-primary,
    accent: $StreamingApp-accent,
    warn: $StreamingApp-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($StreamingApp-theme);

@import '_variables.scss';
@import './assets/fonts/lato/lato-font.scss';
@import 'text.scss';

html { 
  height: 100%;
  font-size: 10px;
}
body {
   margin: 0;
   height: 100%;
   overflow: hidden;
}

.logo {
  width: 10rem;
  height: 10rem;
}

.logo--small {
  width: 5.5rem;
  height: 5.5rem;
}

.image-placeholder {
  display: flex;
  align-items: center;
  justify-content: center;

  width: 6rem;
  height: 6rem;

  border-radius: 1rem;
  background-color: var(--medium-gray-color);

  .mat-icon {
    transform: scale(1.75);
  }
}

.rounded-button {
  padding: 0.5rem 4rem 0.5rem 4rem;

  border: none;
  border-radius: 3rem;
  
  cursor: pointer;
  &:hover {
    filter: brightness(1.05);
  }

  &--medium-gray {
    @extend .rounded-button;
    background-color: var(--medium-gray-color);
  }

  &--light-gray {
    @extend .rounded-button;
    background-color: var(--light-gray-color);
  }

  &--red-accent {
    @extend .rounded-button;
    background-color: var(--red-accent-color);
  }
}

//chrome scrollbar style
::-webkit-scrollbar {
  width: 10px;
}

/* Track of scrollbar*/
::-webkit-scrollbar-track {
  //box-shadow: inset 0 0 1px var(--blue-accent-color);
}

/* Handle of scrollbar */
::-webkit-scrollbar-thumb {
  background: var(--medium-gray-color);
  border-radius: 2rem;
}

/* Handle on hover scrollbar */
::-webkit-scrollbar-thumb:hover {
  background: var(--red-accent-color);
  border-radius: 2rem;
}

// To remove the browser autocomplete blue text background color
input:-webkit-autofill,
input:-webkit-autofill:hover, 
input:-webkit-autofill:focus, 
input:-webkit-autofill:active{
    -webkit-box-shadow: 0 0 0 30px white inset !important;
}

.mat-focused .mat-form-field-label {
  color: var(--blue-accent-color) !important;
}

.mat-form-field-underline {
  background-color: var(--medium-gray-color) !important;
}

.mat-form-field-ripple {
  background-color: var(--blue-accent-color) !important;
}

.mat-snack-bar-container {
  border-radius: 1.25rem !important;
  padding: 1rem 1rem 1rem 1rem !important;
  background: var(--light-gray-color) !important;
}

.mat-simple-snackbar {
  @extend .font-black-tiny-regular;
  margin-top: 0.4rem !important;
  margin-left: 1rem !important;
}

.mat-simple-snackbar-action {   
  color: var(--red-accent-color) !important;
}

.mat-progress-spinner circle, .mat-spinner circle {
  stroke: var(--blue-accent-color);
}
